/*
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadRequestError', 'model/InternalServerError', 'model/NotFoundError', 'model/TokenPostResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BadRequestError'), require('../model/InternalServerError'), require('../model/NotFoundError'), require('../model/TokenPostResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.BasiqApi) {
      root.BasiqApi = {};
    }
    root.BasiqApi.TokenApi = factory(root.BasiqApi.ApiClient, root.BasiqApi.BadRequestError, root.BasiqApi.InternalServerError, root.BasiqApi.NotFoundError, root.BasiqApi.TokenPostResponse);
  }
}(this, function(ApiClient, BadRequestError, InternalServerError, NotFoundError, TokenPostResponse) {
  'use strict';

  /**
   * Token service.
   * @module api/TokenApi
   * @version 2.0.0
   */

  /**
   * Constructs a new TokenApi. 
   * @alias module:api/TokenApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the postToken operation.
     * @callback module:api/TokenApi~postTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TokenPostResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this endpoint to retrieve token that will be passed as authorization header for Basiq API
     * @param {String} basiqVersion 
     * @param {Object} opts Optional parameters
     * @param {String} opts.scope 
     * @param {module:api/TokenApi~postTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TokenPostResponse}
     */
    this.postToken = function(basiqVersion, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'basiqVersion' is set
      if (basiqVersion === undefined || basiqVersion === null) {
        throw new Error("Missing the required parameter 'basiqVersion' when calling postToken");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'basiq-version': basiqVersion
      };
      var formParams = {
        'scope': opts['scope']
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = TokenPostResponse;

      return this.apiClient.callApi(
        '/token', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
